name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # (2) JDK 11 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        
    # 그래들 캐싱
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    # create application-secret.yml
    - name: Create application-secret.properties
      run: |
        # application-secret.yml 생성
        touch ./src/main/resources/application-secret.properties
        
        # Secrets의 APPLICATION_SECRET 값을 application-secret.yml에 쓰기
        echo "${{ secrets.APPLICATION_SECRET }}" > ./src/main/resources/application-secret.properties
      shell: bash
      
    # (3) Gradle build
    - name: Build with Gradle
      run: ./gradlew bootJar

    # Docker Image Build
    - name: Web Docker Build & Push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build --platform linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/evision-server .
        docker push ${{ secrets.DOCKER_USERNAME }}/evision-server

    # EC2 접속 & Pull & 실행
    - name: EC2 Docker Run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker rm $(sudo docker ps -a -q -f status=exited)
          sudo docker rmi $(sudo docker images -q)
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/evision-server
          sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/evision-server
